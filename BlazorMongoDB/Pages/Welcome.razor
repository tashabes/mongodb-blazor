@page "/welcome";
@using BlazorMongoDB.Data
@inject BlazorMongoDB.IService.IUserService userService
@inject BlazorMongoDB.IService.ICompaniesService companiesService
@inject NavigationManager navManager
@inject IJSRuntime jsRuntime
@layout AlternateLayout 




<br />

<div class="dashboard-blocks">
    <div class="dashboard-header-block">
        <div class="oi oi-bell dashboard-icon"></div>
            <div class="dashboard-child">
            <h6>Notifications</h6>
            <p class="dashboard-text">You have 1 time sheet to approve.</p>
        
        </div>
    </div>
    <div class="dashboard-header-block">
        <div class="oi oi-envelope-closed dashboard-icon"></div>
        <div class="dashboard-child">
            <h6>Messages</h6>
            <p class="dashboard-text">You have 0 new messages.</p>

        </div>
    </div>
    <div class="dashboard-header-block">
        <div class="oi oi-british-pound dashboard-icon"></div>
        <div class="dashboard-child">
            <h6>Payments</h6>
            <p class="dashboard-text">You have 2 payments to approve.</p>

        </div>
    </div>
</div>
<br />

<button class="btn btn-primary" @onclick="NavigateToAnotherPage">Users</button>
<button class="btn btn-primary" @onclick="NavigateToCompanies">Companies</button>
<footer>
    <h4>Your Company:</h4>
    <h5>@company.Name</h5>
    <h5>@company.Address</h5>
    <h5>@company.PhoneNumber</h5>
</footer>


@code {

    Users user = new Users();
    Companies company = new Companies();


    protected override async Task OnInitializedAsync()
    {

        string uniqueIdentifier = await jsRuntime.InvokeAsync<string>("localStorage.getItem", "userUniqueIdentifier");
        user = userService.GetUser(uniqueIdentifier);
        company = companiesService.GetCompany(user.CompanyId);

    }

    private void NavigateToAnotherPage()
    {
        navManager.NavigateTo("/users");
    }
    private void NavigateToCompanies()
    {
        navManager.NavigateTo("/companies");
    }

    private string GetGreeting()
    {
        var currentTime = DateTime.Now;

        if (currentTime.Hour >= 5 && currentTime.Hour < 12)
        {
            return "morning";
        }
        else if (currentTime.Hour >= 12 && currentTime.Hour < 17)
        {
            return "afternoon";
        }
        else
        {
            return "evening";
        }
    }
}
